//package com.kage.trkr.api;
//
//import com.kage.trkr.interfaces.IGremlinDriver;
//import com.kage.trkr.tinkerpop.GremlinDriverSingleton;
//import com.ncc.kairos.moirai.clotho.model.Query;
//import io.swagger.annotations.ApiParam;
//import jline.internal.Log;
//import org.springframework.http.HttpStatus;
//import org.springframework.http.ResponseEntity;
//import org.springframework.stereotype.Controller;
//import org.springframework.web.bind.annotation.RequestBody;
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.context.request.NativeWebRequest;
//
//import javax.validation.Valid;
//import java.util.Optional;
//
///**
// * Controller Implementation of the QueryApi that is autogenerated by swagger-codegen.
// * Handles receiving a cypher query, passing it through to a Neo4JRepository, and returning the response
// *
// * @author ryan scott
// * @version 0.1
// */
//@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-09-20T07:40:09.127-04:00[America/New_York]")
//@Controller
//@RequestMapping("${openapi.moiraiClotho.base-path:}")
//public class QueryApiController implements QueryApi {
//
//    private final NativeWebRequest request;
//
//    private IGremlinDriver driver;
//
//    @org.springframework.beans.factory.annotation.Autowired
//    public QueryApiController(NativeWebRequest request) {
//        this.request = request;
//    }
//
//    @Override
//    public Optional<NativeWebRequest> getRequest() {
//        return Optional.ofNullable(request);
//    }
//
//    /**
//     * Handles taking a cypher query from the request body and passing to a Neo4J repository.
//     *
//     * @param body The request body as json with a 'queryString' containing the cypher query.
//     * @return String The response of the query.
//     */
//    @Override
//    public ResponseEntity<String> cypherQuery(@ApiParam("Query to passthrough item to add") @Valid @RequestBody Query body) {
//        HttpStatus responseStatus = HttpStatus.OK;
//        String responseMessage;
//
//        driver = GremlinDriverSingleton.getDriver();
//
//        try {
//            driver.open();
//            responseMessage = driver.runQuery(body.getQueryString());
//        } catch (Exception ex) {
//            Log.error(ex);
//            responseStatus = HttpStatus.INTERNAL_SERVER_ERROR;
//            responseMessage = "Internal Server Error";
//        }
//
//        return new ResponseEntity<String>(responseMessage, responseStatus);
//    }
//}
